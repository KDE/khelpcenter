/*
 *  khelpcenter.idl - part of the KDE Help Center
 *
 *  Copyright (c) 1999 Matthias Elter (me@kde.org)
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#ifndef __khelpcenter_idl__
#define __khelpcenter_idl__

#include <kom.idl>
#include <openparts.idl>

module KHelpCenter
{

	interface TestPart : OpenParts::Part
	{
		void begin( in string url );
		void write( in string text );
		void end();
		void parse();
	};

	interface HelpBrowser
	{
		void open(in string url);
	};

	interface HelpBrowserFactory
	{
		HelpBrowser create();
	};

	

	/*
   	* This event is mapped by the HelpCenter's implementation of the BaseView
   	* interface as well as by all the views.
   	*/
	struct URLRequest
	{
		string url;
		boolean reload /* = false */ ;
		long xOffset /* = 0 */ ;
		long yOffset /* = 0 */ ;
	};

	typedef URLRequest EventOpenURL;
 	const string eventOpenURL = "KHelpCenter/HelpBrowser/OpenURL";

	interface MainWindow : OpenParts::MainWindow
	{
		slot void slotURLStarted(in string url);
		slot void slotURLCompleted();

		slot void openURL( in URLRequest url );    
    
		slot void setStatusBarText( in string text );
		slot void setLocationBarURL( in string url );
    
		slot void createNewWindow( in string url );
	};
	  	
	/*
	* The View interface...very similar to Konqueror views.
	*/
	interface View : OpenParts::Part
  	{
        
    		/*
     		* A full featured HelpCenter View has to map the eventOpenURL event (which 
     		* has a structure EventOpenURL as parameter)
     		*
     		* In addition it may implement/emit the following signals:
     		*      - signal void openURL( in URLRequest url );
     		*      - signal void started( in string url );
     		*      - signal void completed();
     		*      - signal void canceled();
     		*      - signal void setStatusBarText( in string text );
     		*      - signal void setLocationBarURL(  in string url );
     		*      - signal void createNewWindow( in string url );
	     	*/
     
		/*
		* returns the current views url
		*/
    		string url();

		/*
		* stop processing (for example HTML parsing)
		*/
    		void stop();

    		/*
     		* returns a name for the view (for example "KHTMLView)"
     		*/
    		string viewName();
  	};

	/*
	* a HTML viewer
	*/
	interface HTMLView : View
	{
	};

	/*
	* integrated Man viewer.?make this a standalone server part?
	*/
	interface ManView : View
	{
	};

	/*
	* integrated Info viewer.?make this a standalone server part?
	*/
	interface InfoView: View
	{
	};
};

#endif

